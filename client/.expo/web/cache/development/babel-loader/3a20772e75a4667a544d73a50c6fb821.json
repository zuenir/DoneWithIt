{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZeldaArleth\\\\Documents\\\\GitHub\\\\DoneWithIt\\\\App\\\\components\\\\Forms\\\\AppFormImagePicker.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppErrorMessage } from '.';\nimport { useFormikContext } from 'formik';\nimport styles from \"../AppText/styles\";\nimport AppImageInputList from \"../AppImage/AppImageInputList\";\n\nfunction AppFormImagePicker(_ref) {\n  var name = _ref.name;\n\n  var _useFormikContext = useFormikContext(),\n      errors = _useFormikContext.errors,\n      setFieldValue = _useFormikContext.setFieldValue,\n      touched = _useFormikContext.touched,\n      values = _useFormikContext.values;\n\n  var imageUris = values[name];\n\n  var handleAdd = function handleAdd(uri) {\n    setFieldValue(name, [].concat(_toConsumableArray(imageUris), [uri]));\n  };\n\n  var handleRemove = function handleRemove(uri) {\n    setFieldValue(name, imageUris.filter(function (imageUri) {\n      return imageUri !== uri;\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(AppImageInputList, {\n    imageUris: imageUris,\n    onAddImage: handleAdd,\n    onRemoveImage: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(AppErrorMessage, {\n    error: errors[name],\n    visible: touched[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default AppFormImagePicker;","map":{"version":3,"sources":["C:/Users/ZeldaArleth/Documents/GitHub/DoneWithIt/App/components/Forms/AppFormImagePicker.js"],"names":["React","AppErrorMessage","useFormikContext","styles","AppImageInputList","AppFormImagePicker","name","errors","setFieldValue","touched","values","imageUris","handleAdd","uri","handleRemove","filter","imageUri"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,eAAT,QAAgC,GAAhC;AACA,SAAQC,gBAAR,QAA+B,QAA/B;AACA,OAAOC,MAAP;AACA,OAAOC,iBAAP;;AAEA,SAASC,kBAAT,OAAoC;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAAA,0BAEmBJ,gBAAgB,EAFnC;AAAA,MAExBK,MAFwB,qBAExBA,MAFwB;AAAA,MAEhBC,aAFgB,qBAEhBA,aAFgB;AAAA,MAEDC,OAFC,qBAEDA,OAFC;AAAA,MAEQC,MAFR,qBAEQA,MAFR;;AAIhC,MAAMC,SAAS,GAAGD,MAAM,CAACJ,IAAD,CAAxB;;AAEA,MAAMM,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG,EAAI;AACrBL,IAAAA,aAAa,CAACF,IAAD,+BAAUK,SAAV,IAAoBE,GAApB,GAAb;AACD,GAFH;;AAIE,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,GAAD,EAAS;AAC5BL,IAAAA,aAAa,CACXF,IADW,EAEXK,SAAS,CAACI,MAAV,CAAiB,UAACC,QAAD;AAAA,aAAcA,QAAQ,KAAKH,GAA3B;AAAA,KAAjB,CAFW,CAAb;AAID,GALD;;AAOF,SACI,0CACI,oBAAC,iBAAD;AACI,IAAA,SAAS,EAAEF,SADf;AAEI,IAAA,UAAU,EAAEC,SAFhB;AAGI,IAAA,aAAa,EAAEE,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEP,MAAM,CAACD,IAAD,CAA9B;AAAsC,IAAA,OAAO,EAAEG,OAAO,CAACH,IAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH;;AAED,eAAeD,kBAAf","sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport { AppErrorMessage } from '.';\r\nimport {useFormikContext} from 'formik';\r\nimport styles from '../AppText/styles';\r\nimport AppImageInputList from '../AppImage/AppImageInputList';\r\n\r\nfunction AppFormImagePicker({name}) {\r\n    \r\n    const { errors, setFieldValue, touched, values } = useFormikContext();\r\n\r\n    const imageUris = values[name];\r\n\r\n    const handleAdd = uri => {\r\n        setFieldValue(name,[...imageUris,uri]);\r\n      };\r\n    \r\n      const handleRemove = (uri) => {\r\n        setFieldValue(\r\n          name,\r\n          imageUris.filter((imageUri) => imageUri !== uri)\r\n        );\r\n      };\r\n\r\n    return (\r\n        <>\r\n            <AppImageInputList\r\n                imageUris={imageUris}\r\n                onAddImage={handleAdd}\r\n                onRemoveImage={handleRemove}/>\r\n            <AppErrorMessage error={errors[name]} visible={touched[name]}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AppFormImagePicker;"]},"metadata":{},"sourceType":"module"}