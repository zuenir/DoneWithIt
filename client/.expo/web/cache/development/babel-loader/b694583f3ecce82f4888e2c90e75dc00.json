{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZeldaArleth\\\\Documents\\\\GitHub\\\\DoneWithIt\\\\App\\\\screens\\\\MessagesScreen.js\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItemSeparator from \"../components/AppList/ListItemSeparator\";\nimport ListItem from \"../components/AppList/ListItem\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../config/colors\";\nimport ListItemDeleteAction from \"../components/AppList/ListItemDeleteAction\";\nvar initialMessages = [{\n  id: 1,\n  title: 'T1',\n  description: 'D1',\n  image: require(\"../assets/mosh.jpg\")\n}, {\n  id: 2,\n  title: 'T2',\n  description: 'D2',\n  image: require(\"../assets/mosh.jpg\")\n}];\n\nfunction MessagesScreen(props) {\n  var _this = this;\n\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(message) {\n      return message.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subTitle: item.description,\n        image: item.image,\n        onPress: function onPress() {\n          return console.log(\"Message selected\", item);\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      });\n    },\n    ItemSeparatorComponent: ListItemSeparator,\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setMessages([{\n        id: 2,\n        title: 'T2',\n        description: 'D2',\n        image: require(\"../assets/mosh.jpg\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({});\nexport default MessagesScreen;","map":{"version":3,"sources":["C:/Users/ZeldaArleth/Documents/GitHub/DoneWithIt/App/screens/MessagesScreen.js"],"names":["React","useState","ListItemSeparator","ListItem","Screen","colors","ListItemDeleteAction","initialMessages","id","title","description","image","require","MessagesScreen","props","messages","setMessages","refreshing","setRefreshing","handleDelete","message","filter","m","toString","item","console","log","styles","StyleSheet","create"],"mappings":";;AAAC,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAED,OAAOC,iBAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,oBAAP;AAEA,IAAMC,eAAe,GAAG,CACpB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAC,IAFV;AAGIC,EAAAA,WAAW,EAAE,IAHjB;AAIIC,EAAAA,KAAK,EAAEC,OAAO;AAJlB,CADoB,EAOpB;AACIJ,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAC,IAFV;AAGIC,EAAAA,WAAW,EAAE,IAHjB;AAIIC,EAAAA,KAAK,EAAEC,OAAO;AAJlB,CAPoB,CAAxB;;AAeC,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAAA,kBACIb,QAAQ,CAACM,eAAD,CADZ;AAAA;AAAA,MACrBQ,QADqB;AAAA,MACXC,WADW;;AAAA,mBAEQf,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,MAErBgB,UAFqB;AAAA,MAETC,aAFS;;AAG5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,OAAO,EAAI;AAG5BJ,IAAAA,WAAW,CAACD,QAAQ,CAACM,MAAT,CAAgB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACd,EAAF,KAASY,OAAO,CAACZ,EAArB;AAAA,KAAjB,CAAD,CAAX;AACH,GAJD;;AAMC,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,QAAD;AACI,IAAA,IAAI,EAAIO,QADZ;AAEI,IAAA,YAAY,EAAI,sBAAAK,OAAO;AAAA,aAAIA,OAAO,CAACZ,EAAR,CAAWe,QAAX,EAAJ;AAAA,KAF3B;AAGI,IAAA,UAAU,EAAI;AAAA,UAAEC,IAAF,QAAEA,IAAF;AAAA,aACV,oBAAC,QAAD;AACI,QAAA,KAAK,EAAIA,IAAI,CAACf,KADlB;AAEI,QAAA,QAAQ,EAAIe,IAAI,CAACd,WAFrB;AAGI,QAAA,KAAK,EAAIc,IAAI,CAACb,KAHlB;AAII,QAAA,OAAO,EAAI;AAAA,iBAAKc,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC,CAAL;AAAA,SAJf;AAKI,QAAA,kBAAkB,EAAI;AAAA,iBAClB,oBAAC,oBAAD;AACI,YAAA,OAAO,EAAI;AAAA,qBAAKL,YAAY,CAACK,IAAD,CAAjB;AAAA,aADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB;AAAA,SAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHlB;AAeI,IAAA,sBAAsB,EAAItB,iBAf9B;AAgBI,IAAA,UAAU,EAAIe,UAhBlB;AAiBI,IAAA,SAAS,EAAI,qBAAI;AACbD,MAAAA,WAAW,CAAC,CACR;AACIR,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAC,IAFV;AAGIC,QAAAA,WAAW,EAAE,IAHjB;AAIIC,QAAAA,KAAK,EAAEC,OAAO;AAJlB,OADQ,CAAD,CAAX;AAQH,KA1BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADJ;AAgCH;;AAED,IAAMe,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAehB,cAAf","sourcesContent":[" import React, {useState} from 'react';\r\nimport { FlatList, StyleSheet, Platform, StatusBar, View } from 'react-native';\r\nimport ListItemSeparator from '../components/AppList/ListItemSeparator';\r\nimport ListItem from '../components/AppList/ListItem';\r\nimport Screen from '../components/Screen';\r\nimport colors from '../config/colors';\r\nimport ListItemDeleteAction from '../components/AppList/ListItemDeleteAction';\r\n\r\nconst initialMessages = [\r\n    {\r\n        id: 1,\r\n        title:'T1',\r\n        description: 'D1',\r\n        image: require(\"../assets/mosh.jpg\")\r\n    },\r\n    {\r\n        id: 2,\r\n        title:'T2',\r\n        description: 'D2',\r\n        image: require(\"../assets/mosh.jpg\")\r\n    }\r\n];\r\n\r\n function MessagesScreen(props) {\r\n    const [messages, setMessages] = useState(initialMessages);\r\n    const [refreshing, setRefreshing] = useState(false);\r\n    const handleDelete = message => {\r\n        //Delete the message from messages\r\n        //.Call.the.server   \r\n        setMessages(messages.filter(m => m.id !== message.id));\r\n    }\r\n\r\n     return (\r\n         <Screen>\r\n            <FlatList\r\n                data = {messages}\r\n                keyExtractor = {message => message.id.toString()}\r\n                renderItem = {({item})=> ( \r\n                    <ListItem\r\n                        title = {item.title}\r\n                        subTitle = {item.description}\r\n                        image = {item.image}\r\n                        onPress = {()=> console.log(\"Message selected\", item)}\r\n                        renderRightActions = {()=> \r\n                            <ListItemDeleteAction \r\n                                onPress = {()=> handleDelete(item)} />}\r\n                    />\r\n                )} \r\n\r\n                ItemSeparatorComponent = {ListItemSeparator}\r\n                refreshing = {refreshing}\r\n                onRefresh = {()=>{\r\n                    setMessages([\r\n                        {\r\n                            id: 2,\r\n                            title:'T2',\r\n                            description: 'D2',\r\n                            image: require(\"../assets/mosh.jpg\")\r\n                        }\r\n                    ]);\r\n                }}\r\n             />\r\n         </Screen>\r\n     );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n    \r\n });\r\n\r\n export default MessagesScreen;"]},"metadata":{},"sourceType":"module"}